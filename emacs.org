#+title: Org-Roam Hydras

This file describes how to set up hydras for org-roam. 

* Initial Package Setup
This section explains how to get org-roam set up before building a hydra. It assumes you have a directory called =$HOME/org/roam= with your notes and database file. Note that I am using =use-package= to set everything up. And while this is for version 2 of org-roam, I've included the important functions for version 1.
** Org Roam
#+begin_src elisp
(use-package org-roam
    :ensure t
    :config
    (setq org-roam-directory "~/org/roam/"
          org-roam-db-location "~/org/roam/org-roam.db"))
#+end_src 
** Hydra
Hydra is what actually allows us to create the UI for handling notes.
#+begin_src elisp
(use-package hydra
  :ensure t)
#+end_src

* Redefining Functions
We wont have to worry about replacing the original org-roam functions with our own; however, we should give it a different name just to ensure the original isn't overwritten.
** The Core Difference
Although there is only one difference between our capture function and the original one, it is the most important difference of all - actually being able to capture notes to a different directory instead of the one you set by default. While this only prints =org-roam-db-location= to your messages, it is what allows you to capture to a different directory.
#+begin_src elisp
(defun my/org-roam-function (directory)
"Sets `org-roam-directory` to `directory`, and `org-roam-db-location` to `directory/org-roam.db` Prints `org-roam-db-location`."
  (let ((org-roam-directory directory)
          (org-roam-db-location (concat directory "org-roam.db")))
       (message org-roam-db-location)))
(my/org-roam-function "~/org/roam/")
#+end_src

** Capturing Notes
This is our redefined function for capturing notes.
#+begin_src elisp
(defun my/org-roam-capture (directory)
"Sets `org-roam-directory` to `directory`, and `org-roam-db-location` to `directory/org-roam.db` Captures to `directory.`"
(let ((org-roam-directory directory)
          (org-roam-db-location (concat directory "org-roam.db")))
     (org-roam-capture))) ;; works for both v1 and v2
#+end_src

** Finding Notes
This is our redefined function for finding notes.
#+begin_src elisp
(defun my/org-roam-find-file (directory)
"Sets `org-roam-directory` to `directory`, and `org-roam-db-location` to `directory/org-roam.db` Finds file in `directory.`"
(let ((org-roam-directory directory)
          (org-roam-db-location (concat directory "org-roam.db")))
      (org-roam-node-find)))
#+end_src

** Inserting Backlinks
#+begin_src elisp
(defun my/org-roam-capture (directory)
"Sets `org-roam-directory` to `directory`, and `org-roam-db-location` to `directory/org-roam.db` Captures to `directory.`"
(let ((org-roam-directory directory)
          (org-roam-db-location (concat directory "org-roam.db")))
     (org-roam-capture))) ;; works for both v1 and v2
#+end_src



* The Hydras
** Capturing Notes
This hydra will allow us to capture notes to a particular directory. You will need notes and a database file there.
#+begin_src elisp
(defhydra org-roam-capture-hydra



)
#+end_src
